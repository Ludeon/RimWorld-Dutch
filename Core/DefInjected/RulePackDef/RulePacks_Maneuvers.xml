<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>damaged_inf->bite</li>
    <li>damaged_inf->chomp</li>
    <li>damaged_inf(p=0.5)->nip</li>
    <li>damaged_past->bit</li>
    <li>damaged_past->chomped</li>
    <li>damaged_past->nipped</li>
    <li>damaged_past->gnawed</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</li>
    <li>destroyed_past->tore off</li>
    <li>destroyed_past->ripped off</li>
    <li>destroyed_past->bit off</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->ripping off</li>
    <li>destroyed_present->biting off</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix->[to] chunks</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] shreds</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</li>
  -->
  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->bijten</li>
    <li>damaged_inf->kauwen</li>
    <li>damaged_inf(p=0.5)->knagen</li>
    <li>damaged_past->beet</li>
    <li>damaged_past->kauwde</li>
    <li>damaged_past->knaagde</li>
    <li>damaged_past(deflected!=True)->rukte</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en legde daarbij het vlees bloot</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->en legde daarbij de interne machinerie bloot</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een akelige scheur achter in de huid</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een akelige scheur achter in het metaal</li>
    <li>destroyed_past->verscheurde</li>
    <li>destroyed_past->vermorzelde</li>
    <li>destroyed_past->beet</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->ripping off</li>
    <li>destroyed_present->biting off</li>
    <li>destroyed_suffix->aan stukken</li>
    <li>destroyed_suffix->aan stukjes</li>
    <li>destroyed_suffix->aan hompen</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->aan flarden</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->aan repen</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->aan ongelijke repen</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->tot onherkenbare pulp</li>
  </Maneuver_Bite.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] probeerde [TOOL_label] in [RECIPIENT_definite]'s ogen te gooien, maar [RECIPIENT_definite] ontweek het.</li>
    <li>r_logentry->[INITIATOR_definite] probeerde [TOOL_label] in [RECIPIENT_definite]'s ogen te gooien, maar [RECIPIENT_definite] hield het tegen.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] schopte [TOOL_label] in [RECIPIENT_definite]'s ogen.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] schopte een hoeveelheid [TOOL_label] in [RECIPIENT_definite]'s ogen.</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] probeerde [TOOL_label] in [RECIPIENT_definite]'s ogen te schoppen, maar miste.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=2)->poke</li>
    <li>damaged_inf(p=2)->jab</li>
    <li>damaged_inf->prod</li>
    <li>damaged_inf->shove</li>
    <li>damaged_inf->stab</li>
    <li>damaged_past(p=2)->poked</li>
    <li>damaged_past(p=2)->jabbed</li>
    <li>damaged_past->prodded</li>
    <li>damaged_past->shoved</li>
    <li>damaged_past->stabbed</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf(p=2)->por</li>
    <li>damaged_inf(p=2)->duw</li>
    <li>damaged_inf->dauw</li>
    <li>damaged_inf->steek</li>
    <li>damaged_past(p=2)->porde</li>
    <li>damaged_past(p=2)->duwde</li>
    <li>damaged_past->dauwde</li>
    <li>damaged_past->stak</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->verbrijzelde</li>
    <li>destroyed_past->vermorzelde</li>
    <li>destroyed_past->vernietigde</li>
    <li>destroyed_past->verpulverde</li>
    <li>destroyed_past->brak</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->aan stukken</li>
    <li>destroyed_suffix->aan stukjes</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->tot moes</li>
    <li>destroyed_suffix->in gruzelementen</li>
  </Maneuver_Poke.rulePack.rulesStrings>
  
  <!-- EN:
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] fragments</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</li>
  -->
  <Maneuver_Scratch.rulePack.rulesStrings>
    <li>woundname->wond</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en legde daarbij het vlees bloot</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->en legde daarbij de interne machinerie bloot</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een bloederige [woundname] achter</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->aan slordige flarden</li>
    <li>destroyed_suffix->aan flarden</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->aan slordige stukken</li>
    <li>destroyed_suffix->aan stukken</li>
    <li>destroyed_suffix->aan gruzelementen</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->tot een hoopje vlees en bloed</li>
  </Maneuver_Scratch.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->scratch</li>
    <li>damaged_inf(deflected!=True)->lacerate</li>
    <li>damaged_inf(deflected!=True)->tear</li>
    <li>damaged_inf->cut</li>
    <li>damaged_past(p=4)->scratched</li>
    <li>damaged_past(deflected!=True)->lacerated</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_past->cut</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->mauled</li>
    <li>destroyed_past->lacerated</li>
    <li>destroyed_past->tore</li>
    <li>destroyed_past->shredded</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  -->
  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->krabben</li>
    <li>damaged_inf(deflected!=True)->scheuren</li>
    <li>damaged_inf->snijden</li>
    <li>damaged_past(p=4)->krabte</li>
    <li>damaged_past(deflected!=True)->scheurde</li>
    <li>damaged_past->sneed</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->vermorzelde</li>
    <li>destroyed_past->scheurde</li>
    <li>destroyed_past->versnipperde</li>
    <li>destroyed_past->rukte</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->slash</li>
    <li>damaged_inf->cut</li>
    <li>damaged_inf->chop</li>
    <li>damaged_inf->hack</li>
    <li>damaged_inf->slice</li>
    <li>damaged_inf(deflected!=True)->gash</li>
    <li>damaged_past(p=4)->slashed</li>
    <li>damaged_past->cut</li>
    <li>damaged_past->chopped</li>
    <li>damaged_past->hacked</li>
    <li>damaged_past->sliced</li>
    <li>damaged_past(deflected!=True)->gashed</li>
    <li>damaged_present->slashing</li>
    <li>damaged_present->cutting</li>
    <li>damaged_present->slicing</li>
    <li>damaged_present(deflected!=True)->gashing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</li>
    <li>destroyed_past->bisected</li>
    <li>destroyed_past->divided</li>
    <li>destroyed_past->halved</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->split</li>
    <li>destroyed_present->bisecting</li>
    <li>destroyed_present->dividing</li>
    <li>destroyed_present->halving</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->splitting</li>
    <li>destroyed_suffix->into neat pieces</li>
    <li>destroyed_suffix->cleanly</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</li>
  -->
  <Maneuver_Slash.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->slaan</li>
    <li>damaged_inf->steken</li>
    <li>damaged_inf->hakken</li>
    <li>damaged_inf->snijden</li>
    <li>damaged_inf(deflected!=True)->verwonden</li>
    <li>damaged_past(p=4)->sloeg</li>
    <li>damaged_past->stak</li>
    <li>damaged_past->hakte</li>
    <li>damaged_past->sneed</li>
    <li>damaged_past(deflected!=True)->verwondde</li>
    <li>damaged_pastperf(p=4)->geslagen</li>
    <li>damaged_pastperf->gestoken</li>
    <li>damaged_pastperf->gehakt</li>
    <li>damaged_pastperf->gesneden</li>
    <li>damaged_pastperf(deflected!=True)->verwond</li>
    <li>damaged_present->slashing</li>
    <li>damaged_present->cutting</li>
    <li>damaged_present->slicing</li>
    <li>damaged_present(deflected!=True)->gashing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>woundname->wond</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en legde daarbij het vlees bloot</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->en legde daarbij de interne machinerie bloot</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een akelige [woundname] achter</li>
    <li>destroyed_past->spleet</li>
    <li>destroyed_past->doorsneed</li>
    <li>destroyed_past->halveerde</li>
    <li>destroyed_past->deelde</li>
    <li>destroyed_past->brak</li>
    <li>destroyed_present->bisecting</li>
    <li>destroyed_present->dividing</li>
    <li>destroyed_present->halving</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->splitting</li>
    <li>destroyed_suffix->in nette stukjes</li>
    <li>destroyed_suffix->met finesse</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->en legde daarbij de interne structuur bloot</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->perfect door het midden</li>
  </Maneuver_Slash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Smash.rulePack.rulesStrings>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een enorme blauwe plek achter</li>
    <li>flavortext_consequence->waarbij het doelwit duidelijk vervormd werd</li>
    <li>flavortext_consequence->en duwde [RECIPIENT_objective] uit balans</li>
    <li>flavortext_consequence->en duwde [RECIPIENT_objective] opzij</li>
    <li>destroyed_suffix->aan stukken</li>
    <li>destroyed_suffix->aan stukjes</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->tot moes</li>
    <li>destroyed_suffix->aan gruzelementen</li>
  </Maneuver_Smash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf->hit</li>
    <li>damaged_inf->smash</li>
    <li>damaged_inf->bash</li>
    <li>damaged_inf->slam</li>
    <li>damaged_inf->strike</li>
    <li>damaged_inf->beat</li>
    <li>damaged_past->hit</li>
    <li>damaged_past->smashed</li>
    <li>damaged_past->bashed</li>
    <li>damaged_past->slammed</li>
    <li>damaged_past->struck</li>
    <li>damaged_past->beat</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->breaking</li>
  -->
  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf->slaan</li>
    <li>damaged_inf->stampen</li>
    <li>damaged_inf->beuken</li>
    <li>damaged_inf->rammen</li>
    <li>damaged_inf->meppen</li>
    <li>damaged_inf->rossen</li>
    <li>damaged_past->sloeg</li>
    <li>damaged_past->stampte</li>
    <li>damaged_past->beukte</li>
    <li>damaged_past->ramde</li>
    <li>damaged_past->mepte</li>
    <li>damaged_past->roste</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>destroyed_past->verbrijzelde</li>
    <li>destroyed_past->vermorzelde</li>
    <li>destroyed_past->brak</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->breaking</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->stab</li>
    <li>damaged_inf->jab</li>
    <li>damaged_inf(deflected!=True)->pierce</li>
    <li>damaged_inf(deflected!=True)->puncture</li>
    <li>damaged_inf(deflected!=True)->skewer</li>
    <li>damaged_past(p=4)->stabbed</li>
    <li>damaged_past->jabbed</li>
    <li>damaged_past(deflected!=True)->pierced</li>
    <li>damaged_past(deflected!=True)->punctured</li>
    <li>damaged_past(deflected!=True)->skewered</li>
    <li>damaged_present(deflected!=True)->piercing</li>
    <li>damaged_present(deflected!=True)->puncturing</li>
    <li>damaged_present(deflected!=True)->penetrating</li>
    <li>damaged_present(deflected!=True)->skewering</li>
    <li>woundname->hole</li>
    <li>woundname->wound</li>
    <li>woundname->crevice</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</li>
    <li>destroyed_past->impaled</li>
    <li>destroyed_past->perforated</li>
    <li>destroyed_past->skewered</li>
    <li>destroyed_present->impaling</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->skewering</li>
    <li>destroyed_suffix->straight through</li>
    <li>destroyed_suffix->leaving a clean hole</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</li>
  -->
  <Maneuver_Stab.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->steken</li>
    <li>damaged_inf->porren</li>
    <li>damaged_inf(deflected!=True)->doorboren</li>
    <li>damaged_inf(deflected!=True)->doorprikken</li>
    <li>damaged_inf(deflected!=True)->spietsen</li>
    <li>damaged_past(p=4)->stak</li>
    <li>damaged_past->porde</li>
    <li>damaged_past(deflected!=True)->doorboorde</li>
    <li>damaged_past(deflected!=True)->doorprikte</li>
    <li>damaged_past(deflected!=True)->spietste</li>
    <li>damaged_present(deflected!=True)->piercing</li>
    <li>damaged_present(deflected!=True)->puncturing</li>
    <li>damaged_present(deflected!=True)->penetrating</li>
    <li>damaged_present(deflected!=True)->skewering</li>
    <li>woundname->gat</li>
    <li>woundname->wond</li>
    <li>woundname->kloof</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een bloedige [woundname] achter</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een gerafelde [woundname] achter</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->en liet een bloedende [woundname] achter</li>
    <li>destroyed_past->spietste</li>
    <li>destroyed_past->perforeerde</li>
    <li>destroyed_past->doorboorde</li>
    <li>destroyed_present->impaling</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->skewering</li>
    <li>destroyed_suffix->van voor tot achter</li>
    <li>destroyed_suffix->en liet een strak gat achter</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->waarna het interne vloeistoffen begon te lekken</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->waarna het onbekende vloeistoffen begon te lekken</li>
  </Maneuver_Stab.rulePack.rulesStrings>
  
</LanguageData>